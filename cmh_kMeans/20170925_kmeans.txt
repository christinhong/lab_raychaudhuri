# Subset data for faster runs and dev
flow5.sub <- sample_n(flow5, 20000, replace = F)

# PCA on all markers, using PC1 and PC2 for kmeans
flow_pcaPr <- prcomp(flow5.sub[, 1:12], center = F, scale. = F)

# Set variables
k <- 7
kdata <- flow5.sub
iter <- 200
k.conv <- 1e-6

# Testing pulling out desired columns
# summary(flow_pcaPr)
# head(flow_pcaPr$x)
# plot(flow_pcaPr$x[,"PC2"], flow_pcaPr$x[, "PC3"])

# Add PC1 and PC2 to data
kdata$PC1 <- flow_pcaPr$x[,"PC1"]
kdata$PC2 <- flow_pcaPr$x[,"PC2"]

plot(kdata$PC1, kdata$PC2)


## Initialize centroids
seeds <- sample_n(kdata, k, replace = F)


# Assign closest centroid by squared Euclidean distance (PC1 - PC1 centroid, PC2 - PC2 centroid)
# Euclidean distance = sqrt((x1 - x2)^2 + (y1 - y2)^2)
for(i in 1:nrow(kdata)) {
  kdata[i, c("oldCentroid")] <- which.min((seeds$PC1 - kdata[i, c("PC1")])^2 + (seeds$PC2 - kdata[i, c("PC2")])^2)
} 


# Create new centroids for each cluster
k.list <- list() # Create a list for saving dfs

for(j in 1:k) {
  k.j <- kdata %>% 
    filter(oldCentroid %in% j) %>% 
    summarize(meanPC1 = mean(PC1), meanPC2 = mean(PC2))

    k.list[[j]] <- k.j # Add updated df to list of dfs
}

# Concatenate list of data frames into one
seeds.new <- rbind.fill(k.list)


# Re-assign data
for(i in 1:nrow(kdata)) {
  kdata[i, c("newCentroid")] <- 
    which.min((seeds.new$meanPC1 - kdata[i, c("PC1")])^2 + (seeds.new$meanPC2 - kdata[i, c("PC2")])^2)
} 

#### Start iteration ####
seed.history <- list() 

for(x in 1:iter) {
  # Update centroids
  k.list <- list() # Create list for storing new centroids

  for(a in 1:k) {
    k.a <- kdata %>%
      filter(newCentroid %in% a) %>%
      summarize(meanPC1 = mean(PC1), meanPC2 = mean(PC2))

    k.list[[a]] <- k.a # Collect updated centroids
  }

  seeds.new <- rbind.fill(k.list) # Create 1 df of updated centroids
  seed.history[[x]] <- seeds.new # Store centroid history

  # Re-assign data
  for(i in 1:nrow(kdata)) {
    kdata[i, c("newCentroid")] <- 
      which.min((seeds.new$meanPC1 - kdata[i, c("PC1")])^2 + (seeds.new$meanPC2 - kdata[i, c("PC2")])^2)
  } 

  print(paste0(x, " iteration(s) and ", nrow(kdata %>% filter(newCentroid %in% "1")), " rows in cluster 1."))


  # Check for centroid convergence
  if(x > 1) {
    if(sum((seed.history[[x]][c("meanPC1")] - seed.history[[x-1]][c("meanPC1")])^2) < k.conv & 
      sum((seed.history[[x]][c("meanPC2")] - seed.history[[x-1]][c("meanPC2")])^2) < k.conv) {
      print(paste0("Success!  Difference between centroids is < ", k.conv))
      break
    }
  }
}


# Check and save in PDF
pdf.kmeans <- paste0("PDF_", Sys.Date( ), "_kmeans.pdf")

CairoPDF(pdf.kmeans, 
         width = 11.5, 
         height = 8, 
         onefile = TRUE, 
         family = "Helvetica");


gg1 <- ggplot() +  
  geom_point(data = kdata, aes(x = PC1, 
                               y = PC2, 
                               color = factor(newCentroid)), 
             show.legend = T, size = 0.25, alpha = 0.25) +
  geom_point(data = seed.history[[1]], aes(x = meanPC1, y = meanPC2),
             show.legend = F, size = 2, alpha = 1) +
    guides(colour = guide_legend(title = "Clusters", 
                               override.aes = list(size = 2, alpha = 1))) +
  theme_light() +
  ggtitle("Centroids: Iteration 1")


gg2 <- ggplot() +  
  geom_point(data = kdata, aes(x = PC1, 
                               y = PC2, 
                               color = factor(newCentroid)), 
             show.legend = T, size = 0.25, alpha = 0.25) +
  geom_point(data = seed.history[[10]], aes(x = meanPC1, y = meanPC2),
             show.legend = F, size = 2, alpha = 1) +
  guides(colour = guide_legend(title = "Clusters", 
                               override.aes = list(size = 2, alpha = 1))) +
  theme_light() +
  ggtitle("Centroids: Iteration 10")


gg3 <- ggplot() +  
  geom_point(data = kdata, aes(x = PC1, 
                               y = PC2, 
                               color = factor(newCentroid)), 
             show.legend = T, size = 0.25, alpha = 0.25) +
  geom_point(data = seed.history[[x]], aes(x = meanPC1, y = meanPC2),
             show.legend = F, size = 2, alpha = 1) +
  guides(colour = guide_legend(title = "Clusters", 
                               override.aes = list(size = 2, alpha = 1))) +
  theme_light() +
  ggtitle("Centroids: Iteration Final")


gg4 <- ggplot(data = kdata, aes(x = PC1, y = PC2)) +
  geom_point(aes(color = factor(newCentroid)), show.legend = T, size = 0.25, alpha = 0.25) +
  guides(colour = guide_legend(title = "Clusters", 
                               override.aes = list(size = 2, alpha = 1))) +
  theme_light() +
  ggtitle("")

grid.arrange(gg1, gg2, gg3, gg4, ncol = 2)

autoplot(kmeans(kdata[, 1:12], 
                centers = k, 
                iter.max = iter, 
                nstart = 20, 
                algorithm="Lloyd"),
         main = "k means clustering on flow cytometry data post-QC\nPCA by prcomp and kmeans by R", 
         data = kdata,
         size = 0.5,
         alpha = 0.5,
         asp = 1)

dev.off();
